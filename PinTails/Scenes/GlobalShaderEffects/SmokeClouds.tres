[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://d038l06jroqft"]

[ext_resource type="Texture2D" uid="uid://c3hk150786wfm" path="res://Textures/2dTextures/T_PerlinNoise_46_inv.png" id="1_7hu76"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8nt58"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.3, 0.3)]
op_type = 0

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_wf8x8"]
constant = Color(0.406161, 0.396531, 0.372913, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_feefe"]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_s74ot"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0dxfr"]
input_name = "normal"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_cl4yq"]
expanded_output_ports = [0]
texture = ExtResource("1_7hu76")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wpymu"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_e6vih"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_r78mp"]
default_input_values = [0, 0.0, 1, 0.25]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_1bqko"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xpqmo"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.1, 0.5)]
op_type = 0
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_vtx_4;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// Input:3
	vec3 n_out3p0 = NORMAL;


// Input:10
	float n_out10p0 = TIME;


// VectorOp:9
	vec2 n_in9p1 = vec2(0.10000, 0.50000);
	vec2 n_out9p0 = vec2(n_out10p0) * n_in9p1;


// UVFunc:8
	vec2 n_in8p1 = vec2(1.00000, 1.00000);
	vec2 n_out8p0 = n_out9p0 * n_in8p1 + UV;


// Texture2D:4
	vec4 n_out4p0 = texture(tex_vtx_4, n_out8p0);
	float n_out4p1 = n_out4p0.r;


// FloatOp:7
	float n_in7p1 = 0.25000;
	float n_out7p0 = n_out4p1 + n_in7p1;


// VectorOp:5
	vec3 n_out5p0 = n_out3p0 * vec3(n_out7p0);


// VectorOp:6
	vec3 n_out6p0 = n_out2p0 + n_out5p0;


// Output:0
	VERTEX = n_out6p0;


}

void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(0.406161, 0.396531, 0.372913, 1.000000);


// VectorOp:2
	vec2 n_in2p0 = vec2(0.00000, 0.00000);
	vec2 n_in2p1 = vec2(0.30000, 0.30000);
	vec2 n_out2p0 = n_in2p0 + n_in2p1;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out2p0.x;


}
"
nodes/vertex/0/position = Vector2(1100, 220)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_s74ot")
nodes/vertex/2/position = Vector2(449.553, 91.5658)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_0dxfr")
nodes/vertex/3/position = Vector2(109.553, 171.566)
nodes/vertex/4/node = SubResource("VisualShaderNodeTexture_cl4yq")
nodes/vertex/4/position = Vector2(-130.447, 211.566)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorOp_wpymu")
nodes/vertex/5/position = Vector2(589.553, 191.566)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorOp_e6vih")
nodes/vertex/6/position = Vector2(849.553, 111.566)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_r78mp")
nodes/vertex/7/position = Vector2(269.553, 331.566)
nodes/vertex/8/node = SubResource("VisualShaderNodeUVFunc_1bqko")
nodes/vertex/8/position = Vector2(-410.447, 211.566)
nodes/vertex/9/node = SubResource("VisualShaderNodeVectorOp_xpqmo")
nodes/vertex/9/position = Vector2(-650.447, 211.566)
nodes/vertex/10/node = SubResource("VisualShaderNodeInput_feefe")
nodes/vertex/10/position = Vector2(-980, 200)
nodes/vertex/connections = PackedInt32Array(2, 0, 6, 0, 3, 0, 5, 0, 4, 1, 7, 0, 8, 0, 4, 0, 5, 0, 6, 1, 7, 0, 5, 1, 6, 0, 0, 0, 9, 0, 8, 2, 10, 0, 9, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeVectorOp_8nt58")
nodes/fragment/2/position = Vector2(160, 260)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_wf8x8")
nodes/fragment/3/position = Vector2(180, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 1, 3, 0, 0, 0)
